---
name: Build

on:
  pull_request:
    branches:
      - main
      - master

env:
  tag_version: v0.0.11 #${{github.run_id}}

jobs:
  commitizen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Pip installations
        run: |
          pip install commitizen

  # tag_repo:
  #   name: Get runner id and tag the current code snapshot
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Tag and push current repo code
  #       run: |
  #         git tag $tag_version
  #         git push origin $tag_version

  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: $tag_version
          release_name: ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      # - name: Before Build
      #   run: |
      #     cz check

      # - name: Bump-version
      #   run: |
      #     echo "### Building the package ###"

      # - name: Publish packages
      #   run: |
      #     echo "### Package was publish ###"

  # bump-version:
  #   if: "!startsWith(github.event.head_commit.message, 'bump:')"
  #   runs-on: ubuntu-latest
  #   name: "Bump version and create changelog with commitizen"
  #   steps:
  #     - name: Check out
  #       uses: actions/checkout@v2
  #       with:
  #         token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
  #         fetch-depth: 0

  #     - name: Create bump and changelog
  #       uses: commitizen-tools/commitizen-action@master
  #       with:
  #         github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #         changelog_increment_filename: body.md

  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         body_path: "body.md"
  #         tag_name: ${{ env.REVISION }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
